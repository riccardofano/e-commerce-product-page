@forward "/scss/reset";
@use "/scss/mixins" as *;

@import url("https://fonts.googleapis.com/css2?family=Kumbh+Sans:wght@400;700&display=swap");

:root {
  --c-primary-200: hsl(25, 100%, 94%);
  --c-primary-400: hsl(26, 100%, 55%);

  --c-neutral-100: hsl(0, 0%, 100%);
  --c-neutral-300: hsl(223, 64%, 98%);
  --c-neutral-350: hsl(252, 12%, 92%);
  --c-neutral-400: hsl(220, 14%, 75%);
  --c-neutral-700: hsl(219, 9%, 45%);
  --c-neutral-800: hsl(220, 13%, 13%);
  --c-neutral-900: hsl(0, 0%, 0%, 75%);

  --fs-200: 0.8rem;
  --fs-300: 0.9rem;
  --fs-400: 16px;
  --fs-500: 1.25rem;
  --fs-800: 1.75rem;
  --fs-900: 3rem;

  --fs-xs: var(--fs-200);
  --fs-sm: var(--fs-300);
  --fs-body: var(--fs-400);
  --fs-lg: var(--fs-500);
  --fs-xl: var(--fs-800);

  --ff-primary: "Kumbh Sans", sans-serif;
  --ff-body: var(--ff-primary);

  --fw-regular: 400;
  --fw-bold: 700;

  @include for-desktop {
    --fs-xl: var(--fs-900);
  }
}

body {
  font-family: var(--ff-body);
  font-size: var(--fs-body);
  font-weight: var(--fw-regular);
  color: var(--c-neutral-700);
  background-color: var(--c-neutral-100);
}

/* Utility classes */

.bg-primary-200 {
  background-color: var(--c-primary-200);
}
.bg-primary-400 {
  background-color: var(--c-primary-400);
}
.bg-neutral-100 {
  background-color: var(--c-neutral-100);
}
.bg-neutral-300 {
  background-color: var(--c-neutral-300);
}

.text-primary-400 {
  color: var(--c-primary-400);
}
.text-neutral-400 {
  color: var(--c-neutral-400);
}
.text-neutral-700 {
  color: var(--c-neutral-700);
}
.text-neutral-800 {
  color: var(--c-neutral-800);
}

.text-uppercase {
  text-transform: uppercase;
}
.text-strike {
  text-decoration: line-through;
}
.text-center {
  text-align: center;
}

.fw-regular {
  font-weight: var(--fw-regular);
}
.fw-bold {
  font-weight: var(--fw-bold);
}

.fs-xs {
  font-size: var(--fs-xs);
}
.fs-sm {
  font-size: var(--fs-sm);
}
.fs-md {
  font-size: var(--fs-body);
}
.fs-lg {
  font-size: var(--fs-lg);
}
.fs-xl {
  font-size: var(--fs-xl);
}

.lh-sm {
  line-height: 1.2;
}
.lh-md {
  line-height: 1.5;
}

.radius-sm {
  border-radius: 3px;
}
.radius-md {
  border-radius: 5px;
}
.radius-lg {
  border-radius: 10px;
}

.container {
  --max-width: 1110px;
  --padding: 1.5rem;

  width: min(var(--max-width), 100% - (var(--padding) * 2));
  margin-inline: auto;
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.even-columns {
  @include for-desktop {
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }
}
.uneven-columns {
  @include for-desktop {
    grid-template-columns: 0.4fr 0.6fr;
  }
}

.mb-auto {
  margin-top: auto;
  margin-bottom: auto;
}

.flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
.flex-center {
  align-items: center;
  justify-content: center;
}
.flex-v-center {
  align-items: center;
}
.flex-h-center {
  justify-content: center;
}
.flex-sb {
  justify-content: space-between;
}
.flex-gap {
  gap: var(--gap, 1rem);
}
.flex-grow {
  flex-grow: 1;
}

.pointer {
  cursor: pointer;
}

/* Composition classes */

.flow > * + * {
  margin-top: var(--margin, 1rem);

  @include for-desktop {
    --margin: 2rem;
  }
}
.flow-h > * + * {
  margin-left: var(--margin, 1rem);
}

.mg-sm {
  --margin: 0.5rem;

  @include for-desktop {
    --margin: 0.8rem;
  }
}

/* Block classes */

.button {
  border: none;
  border-radius: 10px;
  background-color: transparent;
  padding: 1rem 1.5rem;

  cursor: pointer;
  &[data-type="primary"] {
    background-color: var(--c-primary-400);
    color: var(--c-neutral-100);
    path {
      fill: var(--c-neutral-100);
    }
  }

  &[data-type="inverted"] {
    color: var(--c-primary-400);
  }
}

/* Header */

.header {
  --header-height: 4.5rem;
  height: var(--header-height);

  @include for-desktop {
    --header-height: 7rem;
    border-bottom: 2px solid var(--c-neutral-300);
  }

  > * {
    height: 100%;
  }
}

/* Profile picture */

.img-wrapper {
  width: auto;
  border-radius: 50%;
  overflow: hidden;
  cursor: pointer;

  img {
    height: 1.5rem;
    width: auto;
    object-fit: scale-down;

    @include for-desktop {
      height: 3.125rem;
    }
  }
}

.img-wrapper:hover {
  box-shadow: 0 0 0 2px var(--c-primary-400);
}

/* Navigation */

.nav {
  .overlay {
    display: none;
  }

  --size: 2rem;

  @include for-mobile {
    order: -1;
    margin-left: 0;
    margin-right: 1rem;
    width: var(--size);
    height: var(--size);

    button {
      width: var(--size);
      height: var(--size);
      padding: 0;

      position: absolute;
      --offset: calc(var(--header-height) / 2);
      left: var(--offset);
      top: var(--offset);
      z-index: 1000;

      transform: translate(-50%, -50%);

      img {
        margin-left: auto;
        margin-right: auto;
        object-position: center;
        object-fit: contain;
      }
    }

    ul {
      flex-direction: column;
      padding: 5rem 2rem;
      color: var(--c-neutral-800);
      font-weight: var(--fw-bold);

      position: fixed;
      inset: 0;
      right: 30%;
      z-index: 999;

      ~ .overlay {
        display: block;
        position: absolute;
        inset: 0;
        background-color: var(--c-neutral-900);
        pointer-events: none;
        z-index: 998;
      }
    }
  }

  @include for-desktop {
    margin-left: 3.5rem;
    --gap: 2rem;

    &,
    ul,
    li,
    a {
      height: 100%;
      display: flex;
      align-items: center;
    }

    li {
      position: relative;
    }

    li:hover {
      color: var(--c-neutral-800);

      &::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        height: 4px;
        background-color: var(--c-primary-400);
      }
    }
  }
}

/* Shopping Cart */

.cart button:hover path,
.cart button:hover use {
  fill: var(--c-neutral-800);
}

.bucket {
  --padding: 1rem;

  position: absolute;
  top: calc(var(--header-height) + 0.5rem);
  left: 0.5rem;
  right: 0.5rem;
  min-height: 16rem;
  max-height: 50vh;
  z-index: 100;

  background: var(--c-neutral-100);
  border-radius: 10px;
  box-shadow: 0 1rem 3rem -2rem var(--c-neutral-900);

  img {
    max-width: 50px;
    border-radius: 5px;
  }
}

.cart-header {
  padding: 1.5rem var(--padding);
  border-bottom: 1px solid var(--c-neutral-350);
}

.cart-body {
  padding: 1.5rem var(--padding) 2rem;
  gap: 1.5rem;
}

.cart-info {
  --gap: 1rem;
}

.cart-product-name {
  white-space: nowrap;
  max-width: 85%;
  overflow: hidden;
  text-overflow: ellipsis;
}

.cart-remove {
  padding: 0.5rem;
  padding-right: 0;
  margin-left: auto;
}

@include for-desktop {
  .cart {
    position: relative;
  }

  .bucket {
    width: 22.5rem;
    top: calc(100% + 0.5rem);
    left: 50%;
    transform: translateX(-50%);
  }
}

/* Main Content */

.pill {
  border-radius: 5px;
  padding: 0.1em 0.4em;
  --margin: 1rem;
}

@include for-desktop {
  .main {
    gap: min(125px, 10vw - 1rem);
    padding: 4rem 3rem;
  }

  .price {
    flex-wrap: wrap;

    > :first-child {
      width: 100%;
      margin-bottom: 0.5rem;
    }
  }
}

/* Gallery */

.thumbnails {
  width: 100%;
  gap: 1rem;
  cursor: pointer;

  > * {
    border-radius: 10px;
    overflow: hidden;
  }

  img {
    object-fit: contain;
    width: 100%;
    height: auto;
  }

  :hover img {
    opacity: 0.5;
  }

  [data-active="true"] {
    outline: 2px solid var(--c-primary-400);

    img {
      opacity: 0.3;
    }
  }
}

.full-size {
  max-height: 18.75rem;
  height: 100%;
  width: auto;
  position: relative;

  @include for-desktop {
    max-height: 100%;
    border-radius: 20px;
    overflow: hidden;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  button {
    display: grid;
    place-items: center;
    position: absolute;
    --size: clamp(2rem, 10vw, 3rem);
    width: var(--size);
    height: var(--size);

    background-color: var(--c-neutral-100);
    border-radius: 50%;
    border: 1px solid var(--c-neutral-300);

    &[data-type="previous"] {
      top: 50%;
      left: 2.5rem;

      transform: translate(-50%, -50%);
    }

    &[data-type="next"] {
      top: 50%;
      right: 2.5rem;

      transform: translate(50%, -50%);
    }
  }
}
